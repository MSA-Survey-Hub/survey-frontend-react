{"version":3,"file":"static/js/11.c76a2ee7.chunk.js","mappings":"uRA+IA,UAxIe,WACb,OAAsBA,EAAAA,EAAAA,UAAS,IAAG,eAA3BC,EAAG,KAAEC,EAAM,KAClB,GAAsBF,EAAAA,EAAAA,UAAS,IAAG,eAA3BG,EAAG,KAAEC,EAAM,KAClB,GAA0BJ,EAAAA,EAAAA,UAAS,IAAG,eAA/BK,EAAK,KAAEC,EAAQ,KACtB,GAAwBN,EAAAA,EAAAA,UAAS,IAAG,eAA7BO,EAAI,KAAEC,EAAO,KAChBC,EAAO,CACTC,QAAS,GACTC,OAAQ,GACRC,OAAO,IAKHC,EAAY,yCAAG,wHAEVC,GAAU,gGACQC,EAAAA,EAAAA,KAAW,GAAD,OAAIC,EAAAA,EAAAA,qBAA8B,iCAAyBF,IAAa,OAAnGG,EAAQ,OAGdR,EAAc,QAAIQ,EAASC,KAAK,GAAGC,mBAAmBT,QAClDU,EAAc,GACdC,EAAc,GAElBJ,EAASC,KAAKI,KAAI,SAAAJ,GAChBE,EAAYG,KAAKL,EAAKM,YACtBH,EAAYE,KAAKL,EAAKO,MACxB,IACAhB,EAAa,OAAIW,EACjBX,EAAa,OAAIY,EAEC,IAAdP,EACFZ,EAAO,CAAC,QAAUe,EAASC,KAAK,GAAGC,mBAAmBT,QAAS,MAAQU,EAAa,MAAQC,IACrE,IAAdP,EACTV,EAAO,CAAC,QAAUa,EAASC,KAAK,GAAGC,mBAAmBT,QAAS,MAAQU,EAAa,MAAQC,IACrE,IAAdP,EACTR,EAAS,CAAC,QAAUW,EAASC,KAAK,GAAGC,mBAAmBT,QAAS,MAAQU,EAAa,MAAQC,IACvE,IAAdP,GACTN,EAAQ,CAAC,QAAUS,EAASC,KAAK,GAAGC,mBAAmBT,QAAS,MAAQU,EAAa,MAAQC,IAC9F,2CAvBIP,EAAa,EAAE,KAAD,OAAEA,EAAa,GAAC,yCAA9BA,GAAU,eAAsBA,IAAY,0DAyBtD,kBA3BiB,mCAiClB,OAJAY,EAAAA,EAAAA,YAAU,WACRb,GACF,GAAE,KAGA,UAAC,KAAI,YACH,SAAC,KAAI,CAACc,GAAI,EAAE,UACV,UAAC,KAAK,CAACC,UAAU,OAAM,WACrB,SAAC,KAAW,UAAE3B,EAAIS,WAClB,SAAC,KAAS,WACR,SAAC,KAAS,CACRQ,KAAM,CACJP,OAAQV,EAAI4B,MACZC,SAAU,CACR,CACED,MAAO5B,EAAIS,QACXqB,gBAAiB,UACjBb,KAAMjB,EAAIwB,SAIhBd,OAAO,mBAKf,SAAC,KAAI,CAACgB,GAAI,EAAE,UACV,UAAC,KAAK,CAACC,UAAU,OAAM,WACrB,SAAC,KAAW,UAAEzB,EAAIO,WAClB,SAAC,KAAS,WACR,SAAC,KAAU,CACTQ,KAAM,CACJP,OAAQR,EAAI0B,MACZC,SAAU,CACR,CACED,MAAO1B,EAAIO,QACXqB,gBAAiB,2BACjBC,YAAa,yBACbC,qBAAsB,yBACtBC,iBAAkB,OAClBhB,KAAMf,EAAIsB,mBAQxB,SAAC,KAAI,CAACE,GAAI,EAAE,UACV,UAAC,KAAK,CAACC,UAAU,OAAM,WACnB,SAAC,KAAW,UAAEvB,EAAMK,WACpB,SAAC,KAAS,WACR,SAAC,KAAS,CACRQ,KAAM,CACJP,OAAQN,EAAMwB,MACdC,SAAU,CACR,CACED,MAAOxB,EAAMK,QACbqB,gBAAiB,UACjBb,KAAMb,EAAMoB,SAIlBd,OAAO,mBAKjB,SAAC,KAAI,CAACgB,GAAI,EAAE,UACZ,UAAC,KAAK,CAACC,UAAU,OAAM,WACnB,SAAC,KAAW,UAAErB,EAAKG,WACnB,SAAC,KAAS,WACR,SAAC,KAAU,CACTQ,KAAM,CACJP,OAAQJ,EAAKsB,MACbC,SAAU,CACR,CACED,MAAOtB,EAAKG,QACZqB,gBAAiB,2BACjBC,YAAa,yBACbC,qBAAsB,yBACtBC,iBAAkB,OAClBhB,KAAMX,EAAKkB,oBAU/B,C","sources":["views/analysis/ad_survey_analysis.js"],"sourcesContent":["import React,{ useEffect, useState } from 'react'\nimport { CCard, CCardBody, CCol, CCardHeader, CRow } from '@coreui/react'\nimport { CChartBar, CChartLine, CChartDoughnut, } from '@coreui/react-chartjs'\nimport axios from 'axios';\nimport apiConfig from '../../lib/apiConfig'\n\n\nconst Charts = () => {\n  const [one, setOne] = useState([]);\n  const [two, setTwo] = useState([]);\n  const [three, setThree] = useState([]);\n  const [four, setFour] = useState([]);\n  let Data = {\n    subject: '',\n    labels: [],\n    values:[]\n  }\n\n\n\n  const analysisInfo = async ()=>{\n\n    for (let analysisId = 1; analysisId < 5; analysisId++) {\n        const response = await axios.post(`${apiConfig.platformAnalysisData}?platform_analysis_Id=${analysisId}`)\n\n        // console.log('hihi',response.data[0].platformAnalysisId.subject)\n        Data['subject'] = response.data[0].platformAnalysisId.subject\n        let Data_labels = []\n        let Data_values = []\n\n        response.data.map(data =>{\n          Data_labels.push(data.optionName)\n          Data_values.push(data.value)\n        })\n        Data['labels'] = Data_labels\n        Data['values'] = Data_values\n\n        if (analysisId ===1){\n          setOne({'subject':response.data[0].platformAnalysisId.subject, 'label':Data_labels, 'value':Data_values});\n        } else if (analysisId ===2){\n          setTwo({'subject':response.data[0].platformAnalysisId.subject, 'label':Data_labels, 'value':Data_values});\n        } else if (analysisId ===3){\n          setThree({'subject':response.data[0].platformAnalysisId.subject, 'label':Data_labels, 'value':Data_values});\n        } else if (analysisId ===4){\n          setFour({'subject':response.data[0].platformAnalysisId.subject, 'label':Data_labels, 'value':Data_values});\n        }\n    }\n  }\n\n  useEffect(()=>{\n    analysisInfo();\n  },[]);\n  \n  return (\n    <CRow>\n      <CCol xs={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>{one.subject}</CCardHeader>\n          <CCardBody>\n            <CChartBar\n              data={{\n                labels: one.label,\n                datasets: [\n                  {\n                    label: one.subject,\n                    backgroundColor: '#D3D3D3',\n                    data: one.value,\n                  },\n                ],\n              }}\n              labels=\"months\"\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={6}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>{two.subject}</CCardHeader>\n          <CCardBody>\n            <CChartLine\n              data={{\n                labels: two.label,\n                datasets: [\n                  {\n                    label: two.subject,\n                    backgroundColor: 'rgba(151, 187, 205, 0.2)',\n                    borderColor: 'rgba(151, 187, 205, 1)',\n                    pointBackgroundColor: 'rgba(151, 187, 205, 1)',\n                    pointBorderColor: '#fff',\n                    data: two.value,\n                  },\n                ],\n              }}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={6}>\n        <CCard className=\"mb-4\">\n            <CCardHeader>{three.subject}</CCardHeader>\n            <CCardBody>\n              <CChartBar\n                data={{\n                  labels: three.label,\n                  datasets: [\n                    {\n                      label: three.subject,\n                      backgroundColor: '#D3D3D3',\n                      data: three.value,\n                    },\n                  ],\n                }}\n                labels=\"months\"\n              />\n            </CCardBody>\n          </CCard>\n      </CCol>\n      <CCol xs={6}>\n      <CCard className=\"mb-4\">\n          <CCardHeader>{four.subject}</CCardHeader>\n          <CCardBody>\n            <CChartLine\n              data={{\n                labels: four.label,\n                datasets: [\n                  {\n                    label: four.subject,\n                    backgroundColor: 'rgba(151, 187, 205, 0.2)',\n                    borderColor: 'rgba(151, 187, 205, 1)',\n                    pointBackgroundColor: 'rgba(151, 187, 205, 1)',\n                    pointBorderColor: '#fff',\n                    data: four.value,\n                  },\n                ],\n              }}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Charts\n"],"names":["useState","one","setOne","two","setTwo","three","setThree","four","setFour","Data","subject","labels","values","analysisInfo","analysisId","axios","apiConfig","response","data","platformAnalysisId","Data_labels","Data_values","map","push","optionName","value","useEffect","xs","className","label","datasets","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor"],"sourceRoot":""}