{"version":3,"file":"static/js/9270.3e2635b3.chunk.js","mappings":"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","sources":["lib/Loading/Styles.js","lib/Loading/Loading.js","views/survey/list/MakeList.js"],"sourcesContent":["// Styles.js\nimport styled from 'styled-components';\n\nexport const Background = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  background: #ffffffb7;\n  z-index: 999;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LoadingText = styled.div`\n  font: 1rem 'Noto Sans KR';\n  text-align: center;\n`;","import React from 'react';\nimport ladingImage from 'src/assets/images/loading/loading1.gif';\nimport {Background, LoadingText} from './Styles';\n\n\n\nexport const Loading = () => {\n    return (\n        <>\n            <Background>\n                <LoadingText>잠시만 기다려 주세요.</LoadingText>\n                <img src={ladingImage} alt=\"로딩중\" width=\"5%\" />\n            </Background>\n        </>\n      );\n  };\n\nexport default Loading;\n\n","import React, { useState } from 'react'\nimport {\n  CInputGroup,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdown,\n  CFormInput,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardTitle,\n  CCardText,\n  CRow,\n  CCol,\n  CForm,\n  CCardFooter,\n  CCardHeader,\n  CBadge,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\nimport axios from \"axios\";\nimport apiConfig from 'src/lib/apiConfig';\nimport usePromise from 'src/lib/usePromise';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport Loading from 'src/lib/Loading/Loading';\nimport { useNavigate } from 'react-router-dom';\n\nconst MakeList = () => {\n  const navigate = useNavigate();\n\n\n  const { user } = useSelector(({user})=> ({user:user.user}));\n  \n  let accessToken = null;\n  if(user == null){\n    navigate('/');\n\n  }else{\n    accessToken = user.token.access_token;\n  }\n\n\n  const current = decodeURI(window.location.href);\n  const search = current.split(\"?\")[1];\n  const params = new URLSearchParams(search);\n  const nowPage = params.get('page') ? params.get('page') : 1;\n\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  // 카테고리 리스트\n  let categoryOptionList = [];\n  const animatedComponents = makeAnimated();\n  const [cloading, cresponse, cerror] = usePromise(() => {\n    return axios.get(apiConfig.surveyCategorySelectList)\n  }, []);\n  if(cresponse != null){\n    cresponse.data.map((option) => {\n      categoryOptionList.push({ value: option.surCatId, label: option.content });\n    });\n  }\n\n\n  function getSelectedCategory(){\n    let arr= [];\n    if(selectedOption != null){\n      selectedOption.forEach(function(option) {\n        arr.push(option.value);\n      });\n    };\n    return arr;\n  }\n\n  let surveyList = [];\n  let page = {\n    prev: false,\n    start: 1,\n    page: 3,\n    next: false,\n    end: 1,\n    pagelist: [1],\n  }\n  const [loading, response, error] = usePromise(() => {\n    return axios.get(apiConfig.surveyMakeList + \"?category=\"+getSelectedCategory()+\"&page=\"+ nowPage,\n    {headers: {'Authorization': 'Bearer ' + accessToken }})\n  }, []);\n\n  if(response != null){\n    console.log(response);\n    surveyList = response.data.content;\n    page.page = response.data.number+1;\n    let arr = [];\n    for (let i = 0; i < response.data.totalPages; i++) {\n      arr.push(i+1);\n    }\n    page.pagelist = arr;\n  }\n\n  const DuplicateSurveyOnClickHandler = (e, link,sur_id) => {\n    window.location.href = link+'?copy='+sur_id;\n  }\n\n  const SurveyDetailOnClickHandler = (e, link,sur_id) => {\n    window.location.href = link+\"/\"+sur_id;\n  }\n\n  return (\n    <>\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong> 생성 목록 </strong>\n            <small> 생성한 설문조사를 조회 할 수 있습니다. </small>\n\n          </CCardHeader>\n          <CCardBody>\n            <CCard className=\"mb-2\">\n              <CCardBody>\n                <CForm>\n                  <CInputGroup className=\"mb-4\">\n                    <Select\n                        closeMenuOnSelect={false}\n                        components={animatedComponents}\n                        isMulti\n                        options={categoryOptionList}\n                        onChange={setSelectedOption}\n                      />\n                    <CFormInput aria-label=\"Text input with 2 dropdown buttons\" />\n                    <CButton type=\"button\">검색</CButton>\n                  </CInputGroup>\n                </CForm>\n                <CRow>\n                  {surveyList.map((data) => (\n                    <CCol xs={3} key={data.surId} >\n                      <CCard className=\"mb-4\">\n                        <CCardHeader>{data.content}</CCardHeader>\n                        <CCardBody>\n                          <CCardTitle>{data.title}</CCardTitle>\n                          <CCardText>\n                            <small>{moment(new Date(data.regDt)).format('YYYY-MM-DD')}~ {moment(new Date(data.dueDt)).format('YYYY-MM-DD')}</small><br/>\n\n                            <CBadge color={ data.statusName == \"제작\" ?  \"success\" : (data.statusName == \"배포\" ?\"primary\" : \"danger\")}> {data.statusName}</CBadge>\n\n\n\n                          </CCardText>\n                        </CCardBody>\n                        <CCardFooter>\n                          <CButton color=\"primary\" variant=\"outline\" className=\"m-1\" size=\"sm\" onClick={(e) => SurveyDetailOnClickHandler(e, '#/survey/detail', data.surId)}>Details</CButton>\n                          { data.statusName != \"제작\" ? (  <CButton color=\"warning\" variant=\"outline\" className=\"m-1\" size=\"sm\" onClick={(e) => DuplicateSurveyOnClickHandler(e, '#/survey/create',data.sur_id)}>Copy</CButton>):null}\n                          { data.statusName == \"제작\" ? (  <CButton color=\"success\" variant=\"outline\" className=\"m-1\" size=\"sm\">Edit</CButton>):null}\n                          <CButton color=\"danger\" variant=\"outline\" className=\"m-1\" size=\"sm\">Remove</CButton>\n                        </CCardFooter>\n                      </CCard>\n                    </CCol>\n                  ))}\n                </CRow>\n                <CPagination aria-label=\"Page navigation example\" align=\"center\">\n                  {page.prev ? (\n                    <CPaginationItem aria-label=\"Previous\">\n                      <span aria-hidden=\"true\">\n                        <a href={'/#/survey/makeList?category=' + getSelectedCategory()+ '&page=' + page.start - 1}>&laquo;</a>\n                      </span>\n                    </CPaginationItem>\n                  ) : (\n                    <CPaginationItem aria-label=\"Previous\" disabled>\n                      <span aria-hidden=\"true\">&laquo;</span>\n                    </CPaginationItem>\n                  )}\n                  {page.pagelist.map((idx) =>\n                    idx === page.page ? (\n                      <CPaginationItem active key={idx}>{page.page}</CPaginationItem>\n                    ) : (\n                      <CPaginationItem key={idx}>\n                        <a href={ \"#/survey/makeList?category=\" + getSelectedCategory() +  \"&page=\" + idx} >{idx}</a>\n                      </CPaginationItem>\n                    ),\n                  )}\n                  {page.next ? (\n                    <CPaginationItem aria-label=\"Next\">\n                      <span aria-hidden=\"true\">\n                        <a href={'/#/survey/makeList?category=' +getSelectedCategory() + '&page=' + page.end + 1}>&raquo;</a>\n                      </span>\n                    </CPaginationItem>\n                  ) : (\n                    <CPaginationItem aria-label=\"Next\" disabled>\n                      <span aria-hidden=\"true\">&raquo;</span>\n                    </CPaginationItem>\n                  )}\n                </CPagination>\n              </CCardBody>\n            </CCard>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n    </>)\n  }\n\nexport default MakeList\n"],"names":["Background","styled","LoadingText","src","ladingImage","alt","width","navigate","useNavigate","user","useSelector","accessToken","token","access_token","search","decodeURI","window","location","href","split","params","URLSearchParams","nowPage","get","useState","selectedOption","setSelectedOption","categoryOptionList","animatedComponents","makeAnimated","usePromise","axios","apiConfig","cresponse","getSelectedCategory","arr","forEach","option","push","value","data","map","surCatId","label","content","surveyList","page","prev","start","next","end","pagelist","headers","response","console","log","number","i","totalPages","xs","className","closeMenuOnSelect","components","isMulti","options","onChange","type","title","moment","Date","regDt","format","dueDt","color","statusName","variant","size","onClick","e","link","sur_id","surId","align","disabled","idx","active"],"sourceRoot":""}