{"version":3,"file":"static/js/4191.bd6bf504.chunk.js","mappings":"kSA6KA,UAjJkB,WAEhB,IAAQA,GAASC,EAAAA,EAAAA,KAAY,YAAM,MAAM,CAACD,KAAP,EAAJA,KAAqBA,KAAK,IAAjDA,KAGFE,EADUC,UAAUC,OAAOC,SAASC,MACnBC,MAAM,KAAK,GAC5BC,EAAS,IAAIC,gBAAgBP,GAC7BQ,EAAUF,EAAOG,IAAI,QAAUH,EAAOG,IAAI,QAAU,EAEtDC,EAAO,CACTC,MAAM,EACNC,MAAO,EACPF,KAAM,EACNG,MAAM,EACNC,IAAK,EACLC,SAAU,CAAC,IAUXC,EAAa,GAEXC,EAAcnB,EAAKoB,MAAMC,aAE/B,GAAmCC,EAAAA,EAAAA,IAAW,WAC5C,OAAOC,EAAAA,EAAAA,IAAUC,EAAAA,EAAAA,sBAAkC,yBAA0Bd,EAAQ,CAACe,QAAS,CAAC,cAAiB,UAAYN,IAC/H,GAAG,IAAG,eAFUO,GAAF,KAAU,MAAO,KAM/B,GAFAC,QAAQC,IAAIF,GAEG,MAAZA,EAAiB,CAClBR,EAAaQ,EAASG,KAAKC,QAE3B,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIN,EAASG,KAAKI,WAAYD,IAC5CD,EAAIG,KAAKF,EAAE,GAEbpB,EAAKK,SAAWc,CAClB,CAKE,OACE,+BACA,SAAC,KAAI,WACH,SAAC,KAAI,CAACI,GAAI,GAAG,UACX,UAAC,KAAK,CAACC,UAAU,OAAM,WACrB,UAAC,KAAW,YACV,6DACA,4IAGF,SAAC,KAAS,WACR,SAAC,KAAK,CAACA,UAAU,OAAM,UACrB,UAAC,KAAS,YACR,SAAC,KAAK,CAACC,OAAQ,UAAWC,OAAQ,OAAO,UACvC,UAAC,KAAW,CAACF,UAAU,OAAM,WAC3B,UAAC,KAAS,CAACG,QAAQ,cAAa,WAC9B,SAAC,KAAe,CAACC,MAAM,YAAYD,QAAQ,UAAS,wCAGpD,SAAC,KAAa,UAjDnB,CACf,CAACE,GAAI,EAAGC,KAAM,gBACd,CAACD,GAAI,EAAGC,KAAM,gBACd,CAACD,GAAI,EAAEC,KAAM,gBACb,CAACD,GAAI,EAAEC,KAAM,gBACb,CAACD,GAAI,EAAGC,KAAM,iBA6CkBC,KAAI,SAACd,GAAI,OACjB,SAAC,KAAa,CAACvB,KAAM,oBAAsBuB,EAAKY,GAAG,SAChDZ,EAAKa,MADiDb,EAAKY,GAE9C,UAItB,SAAC,KAAU,CAAC,aAAW,wCACvB,SAAC,KAAO,CAACG,KAAK,SAAQ,gCAG1B,SAAC,KAAI,UACJ1B,EAAWyB,KAAI,SAACd,GAAI,OACjB,SAAC,KAAI,CAACM,GAAI,EAAE,UACV,UAAC,KAAK,CAACC,UAAU,OAAM,WACrB,SAAC,KAAW,UAAEP,EAAKC,WACnB,UAAC,KAAS,YACR,SAAC,KAAU,UAAED,EAAKgB,SAClB,UAAC,KAAS,YACR,6BAAQC,IAAO,IAAIC,KAAKlB,EAAKmB,SAASC,OAAO,cAAa,KAAIH,IAAO,IAAIC,KAAKlB,EAAKqB,SAASD,OAAO,kBAAsB,kBAChG,KAAvBpB,EAAKsB,gBAA0B,SAAC,KAAM,CAACX,MAAM,UAAS,SAAEX,EAAKuB,cAA0B,KAChE,KAAvBvB,EAAKsB,gBAA0B,SAAC,KAAM,CAACX,MAAM,UAAS,SAAEX,EAAKuB,cAA0B,KAChE,KAAvBvB,EAAKsB,gBAA0B,SAAC,KAAM,CAACX,MAAM,SAAQ,SAAEX,EAAKuB,cAA0B,YAI5F,UAAC,KAAW,YACZ,SAAC,KAAO,CAACZ,MAAM,UAAUD,QAAQ,UAAUH,UAAU,MAAMiB,KAAK,KAAKC,QAAS,SAACC,GAAC,OAlDjEC,EAkDoG,kBAlD/FC,EAkDkH5B,EAAK4B,YAjDjKrD,OAAOC,SAASC,KAAOkD,EAAK,IAAIC,GADC,IAAID,EAAKC,CAkD8H,EAAC,qBAC1H,KAAvB5B,EAAKsB,gBAA2B,SAAC,KAAO,CAACX,MAAM,UAAUD,QAAQ,UAAUH,UAAU,MAAMiB,KAAK,KAAI,kBAAiB,MACvH,SAAC,KAAO,CAACb,MAAM,SAASD,QAAQ,UAAUH,UAAU,MAAMiB,KAAK,KAAI,2BAhBrDxB,EAAK4B,OAmBhB,OAGX,UAAC,KAAW,CAAC,aAAW,0BAA0BC,MAAM,SAAQ,UAC7D9C,EAAKC,MACJ,SAAC,KAAe,CAAC,aAAW,WAAU,UACpC,iBAAM,cAAY,OAAM,UACtB,cAAGP,KAAM,oBAAsBM,EAAK+C,SAAW,SAAW/C,EAAKE,MAAQ,EAAE,uBAI7E,SAAC,KAAe,CAAC,aAAW,WAAW8C,UAAQ,YAC7C,iBAAM,cAAY,OAAM,oBAG3BhD,EAAKK,SAAS0B,KAAI,SAACkB,GAAG,OACrBA,IAAQjD,EAAKA,MACX,SAAC,KAAe,CAACkD,QAAM,WAAYlD,EAAKA,MAAXiD,IAE7B,SAAC,KAAe,WACd,cAAGvD,KAAM,oBAAsBM,EAAK+C,SAAW,SAAWE,EAAI,SAAEA,KAD5CA,EAGvB,IAEFjD,EAAKG,MACJ,SAAC,KAAe,CAAC,aAAW,OAAM,UAChC,iBAAM,cAAY,OAAM,UACtB,cAAGT,KAAM,oBAAsBM,EAAK+C,SAAW,SAAW/C,EAAKI,IAAM,EAAE,uBAI3E,SAAC,KAAe,CAAC,aAAW,OAAO4C,UAAQ,YACzC,iBAAM,cAAY,OAAM,sCAY9C,C","sources":["views/survey/list/PrtcpList.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  CInputGroup,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdown,\n  CFormInput,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardTitle,\n  CCardText,\n  CRow,\n  CCol,\n  CForm,\n  CCardFooter,\n  CCardHeader,\n  CBadge,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\nimport axios from \"axios\";\nimport apiConfig from 'src/lib/apiConfig';\nimport usePromise from 'src/lib/usePromise';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux'\n\nconst PrtcpList = () => {\n\n  const { user } = useSelector(({user})=> ({user:user.user}));\n\n  const current = decodeURI(window.location.href);\n  const search = current.split(\"?\")[1];\n  const params = new URLSearchParams(search);\n  const nowPage = params.get('page') ? params.get('page') : 1;\n\n  let page = {\n    prev: false,\n    start: 1,\n    page: 3,\n    next: false,\n    end: 1,\n    pagelist: [1],\n  }\n  let category = [\n  {id: 1, name: '학교' },\n  {id: 2, name: '기업',},\n  {id: 3,name: '연애',},\n  {id: 4,name: '사업',},\n  {id: 5, name: '취미',},\n]\n\nlet surveyList = [];\n\nconst accessToken = user.token.access_token;\n\nconst [loading, response, error] = usePromise(() => {\n  return axios.get(apiConfig.surveyParticipateList + \"?&category_id=10&page=\"+ nowPage,{headers: {'Authorization': 'Bearer ' + accessToken }})\n}, []);\n\nconsole.log(response);\n\nif(response != null){\n  surveyList = response.data.content;\n  let arr = [];\n  for (let i = 0; i < response.data.totalPages; i++) {\n    arr.push(i+1);\n  }\n  page.pagelist = arr;\n}\n\nconst SurveyDetailOnClickHandler = (e, link,sur_id) => {\n  window.location.href = link+\"/\"+sur_id;\n}\n  return (\n    <>\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong> 참여 목록 </strong>\n            <small> 참여한 설문조사를 조회 할 수 있습니다. </small>\n\n          </CCardHeader>\n          <CCardBody>\n            <CCard className=\"mb-2\">\n              <CCardBody>\n                <CForm action={'/search'} method={'post'}>\n                  <CInputGroup className=\"mb-4\">\n                    <CDropdown variant=\"input-group\">\n                      <CDropdownToggle color=\"secondary\" variant=\"outline\">\n                        분류 선택\n                      </CDropdownToggle>\n                      <CDropdownMenu>\n                        {category.map((data) => (\n                          <CDropdownItem href={'/search?category=' + data.id} key={data.id}>\n                            {data.name}\n                          </CDropdownItem>\n                        ))}\n                      </CDropdownMenu>\n                    </CDropdown>\n                    <CFormInput aria-label=\"Text input with 2 dropdown buttons\" />\n                    <CButton type=\"submit\">검색</CButton>\n                  </CInputGroup>\n                </CForm>\n                <CRow>\n                {surveyList.map((data) => (\n                    <CCol xs={3} key={data.sur_id} >\n                      <CCard className=\"mb-4\">\n                        <CCardHeader>{data.content}</CCardHeader>\n                        <CCardBody>\n                          <CCardTitle>{data.title}</CCardTitle>\n                          <CCardText>\n                            <small>{moment(new Date(data.reg_dt)).format('YYYY-MM-DD')}~ {moment(new Date(data.due_dt)).format('YYYY-MM-DD')}</small><br/>\n                            { data.display_status == \"P\" ? ( <CBadge color=\"success\">{data.status_name}</CBadge> ) : null }\n                            { data.display_status == \"I\" ? ( <CBadge color=\"primary\">{data.status_name}</CBadge> ) : null }\n                            { data.display_status == \"F\" ? ( <CBadge color=\"danger\">{data.status_name}</CBadge> ) : null }\n\n                          </CCardText>\n                        </CCardBody>\n                        <CCardFooter>\n                        <CButton color=\"primary\" variant=\"outline\" className=\"m-1\" size=\"sm\" onClick={(e) => SurveyDetailOnClickHandler(e, '#/survey/detail', data.sur_id)}>Details</CButton>\n                        { data.display_status == \"P\" ? (  <CButton color=\"success\" variant=\"outline\" className=\"m-1\" size=\"sm\">Edit</CButton>):null}\n                        <CButton color=\"danger\" variant=\"outline\" className=\"m-1\" size=\"sm\">Remove</CButton>\n                      </CCardFooter>\n                      </CCard>\n                    </CCol>\n                  ))}\n                </CRow>\n                <CPagination aria-label=\"Page navigation example\" align=\"center\">\n                  {page.prev ? (\n                    <CPaginationItem aria-label=\"Previous\">\n                      <span aria-hidden=\"true\">\n                        <a href={'/search?category=' + page.category + '&page=' + page.start - 1}>&laquo;</a>\n                      </span>\n                    </CPaginationItem>\n                  ) : (\n                    <CPaginationItem aria-label=\"Previous\" disabled>\n                      <span aria-hidden=\"true\">&laquo;</span>\n                    </CPaginationItem>\n                  )}\n                  {page.pagelist.map((idx) =>\n                    idx === page.page ? (\n                      <CPaginationItem active key={idx}>{page.page}</CPaginationItem>\n                    ) : (\n                      <CPaginationItem key={idx}>\n                        <a href={'/search?category=' + page.category + '&page=' + idx}>{idx}</a>\n                      </CPaginationItem>\n                    ),\n                  )}\n                  {page.next ? (\n                    <CPaginationItem aria-label=\"Next\">\n                      <span aria-hidden=\"true\">\n                        <a href={'/search?category=' + page.category + '&page=' + page.end + 1}>&raquo;</a>\n                      </span>\n                    </CPaginationItem>\n                  ) : (\n                    <CPaginationItem aria-label=\"Next\" disabled>\n                      <span aria-hidden=\"true\">&raquo;</span>\n                    </CPaginationItem>\n                  )}\n                </CPagination>\n              </CCardBody>\n            </CCard>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n    </>\n  )\n}\n\nexport default PrtcpList\n"],"names":["user","useSelector","search","decodeURI","window","location","href","split","params","URLSearchParams","nowPage","get","page","prev","start","next","end","pagelist","surveyList","accessToken","token","access_token","usePromise","axios","apiConfig","headers","response","console","log","data","content","arr","i","totalPages","push","xs","className","action","method","variant","color","id","name","map","type","title","moment","Date","reg_dt","format","due_dt","display_status","status_name","size","onClick","e","link","sur_id","align","category","disabled","idx","active"],"sourceRoot":""}