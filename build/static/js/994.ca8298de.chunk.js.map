{"version":3,"file":"static/js/994.ca8298de.chunk.js","mappings":"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","sources":["lib/Loading/Styles.js","lib/Loading/Loading.js","views/survey/search/Search.js"],"sourcesContent":["// Styles.js\nimport styled from 'styled-components';\n\nexport const Background = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  background: #ffffffb7;\n  z-index: 999;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LoadingText = styled.div`\n  font: 1rem 'Noto Sans KR';\n  text-align: center;\n`;","import React from 'react';\nimport ladingImage from 'src/assets/images/loading/loading1.gif';\nimport {Background, LoadingText} from './Styles';\n\n\n\nexport const Loading = () => {\n    return (\n        <>\n            <Background>\n                <LoadingText>잠시만 기다려 주세요.</LoadingText>\n                <img src={ladingImage} alt=\"로딩중\" width=\"5%\" />\n            </Background>\n        </>\n      );\n  };\n\nexport default Loading;\n\n","import React, { useState } from 'react'\nimport {\n  CInputGroup,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdown,\n  CFormInput,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CForm,\n  CPagination,\n  CPaginationItem,\n  CTable,\n  CTableDataCell,\n  CTableBody,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CRow,\n  CCol,\n} from '@coreui/react'\nimport axios from \"axios\";\nimport apiConfig from 'src/lib/apiConfig';\nimport moment from 'moment';\nimport usePromise from 'src/lib/usePromise';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport Loading from 'src/lib/Loading/Loading';\n\n\nconst SurveySearchList = () => {\n  const current = decodeURI(window.location.href);\n  const search = current.split(\"?\")[1];\n  const params = new URLSearchParams(search);\n  const nowPage = params.get('page') ? params.get('page') : 1;\n\n\n  // 카테고리 리스트\n  let categoryOptionList = [];\n  const animatedComponents = makeAnimated();\n  const [cloading, cresponse, cerror] = usePromise(() => {\n  return axios.get(apiConfig.surveyCategorySelectList)\n  }, []);\n  if(cresponse != null){\n    cresponse.data.map((option) => {\n      categoryOptionList.push({ value: option.surCatId, label: option.content });\n    });\n  }\n\n  // 설문 검색 리스트\n  let surveyList = [];\n  let page = {\n    prev: false,\n    start: 1,\n    page: 3,\n    next: false,\n    end: 1,\n    pagelist: [1, 2, 3, 4, 5, 6],\n  };\n  const [loading, response, error] = usePromise(() => {\n    return axios.get(apiConfig.surveySearchList+\"?&category_id=10&page=\"+ nowPage);\n  }, []);\n  if(response != null){\n    surveyList = response.data.content;\n    let arr = [];\n    for (let i = 0; i < response.data.totalPages; i++) {\n      arr.push(i+1);\n    }\n    page.pagelist = arr;\n  }\n  \n\n  // 검색 상세 페이지 링크\n  const tableRowClick = (e, id) => {\n    window.location.href = \"/#/survey/detail/\"+id;\n  }\n\n      \n  return (\n    <>\n    { loading?  <Loading /> : \n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong> 설문 검색 </strong>\n            <small> 전체 공개된 설문조사를 조회 할 수 있습니다. </small>\n          </CCardHeader>\n          <CCardBody>\n            <CCard className=\"mb-2\">\n              <CCardBody>\n                <CForm action={'/#/survey/search'} method={'post'}>\n                  <CInputGroup className=\"mb-4\">\n                    <Select\n                      closeMenuOnSelect={false}\n                      components={animatedComponents}\n                      defaultValue={[]}\n                      isMulti\n                      options={categoryOptionList}\n                    />\n                    <CFormInput aria-label=\"Text input with 2 dropdown buttons\" />\n                    <CButton type=\"submit\">검색</CButton>\n                  </CInputGroup>\n                </CForm>\n                <CCard className=\"mb-3\">\n                  <CCardHeader>검색 목록</CCardHeader>\n                  <CCardBody>\n                    <CTable className=\"table-hover\">\n                      <CTableHead>\n                        <CTableRow>\n                          <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문분류</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문명</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문내용</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문생성자</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문참여자</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문일</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">마감일</CTableHeaderCell>\n                        </CTableRow>\n                      </CTableHead>\n                      <CTableBody>\n                        {surveyList.map((data) => (\n                          <CTableRow key={data.sur_id} onClick={(e) => tableRowClick(e, data.sur_id)}>\n                            <CTableHeaderCell scope=\"row\">{data.sur_id}</CTableHeaderCell>\n                            <CTableDataCell>{data.content}</CTableDataCell>\n                            <CTableDataCell>{data.title}</CTableDataCell>\n                            <CTableDataCell>{data.description}</CTableDataCell>\n                            <CTableDataCell>{data.reg_id}</CTableDataCell>\n                            <CTableDataCell>{data.answer_cnt}명</CTableDataCell>\n                            <CTableDataCell>{moment(new Date(data.reg_dt)).format('YYYY-MM-DD')}</CTableDataCell>\n                            <CTableDataCell>{moment(new Date(data.due_dt)).format('YYYY-MM-DD')}</CTableDataCell>\n                          </CTableRow>\n                        ))}\n                      </CTableBody>\n                    </CTable>\n                  </CCardBody>\n                </CCard>\n                <CPagination aria-label=\"Page navigation example\" align=\"center\">\n                  {page.prev ? (\n                    <CPaginationItem aria-label=\"Previous\">\n                      <span aria-hidden=\"true\">\n                        <a href={'/#/survey/search?page=' + page.start - 1}>&laquo;</a>\n                      </span>\n                    </CPaginationItem>\n                  ) : (\n                    <CPaginationItem aria-label=\"Previous\" disabled>\n                      <span aria-hidden=\"true\">&laquo;</span>\n                    </CPaginationItem>\n                  )}\n                  \n                  {page.pagelist.map((idx) =>\n                    idx === page.page ? (\n                      <CPaginationItem active key={idx}>{page.page}</CPaginationItem>\n                    ) : (\n                      <CPaginationItem key={idx}>\n                        <a href={'/#/survey/search?&page=' + idx}>{idx}</a>\n                      </CPaginationItem>\n                    ),\n                  )}\n                  {page.next ? (\n                    <CPaginationItem aria-label=\"Next\">\n                      <span aria-hidden=\"true\">\n                        <a href={'/#/survey/search?page=' + page.end + 1}>&raquo;</a>\n                      </span>\n                    </CPaginationItem>\n                  ) : (\n                    <CPaginationItem aria-label=\"Next\" disabled>\n                      <span aria-hidden=\"true\">&raquo;</span>\n                    </CPaginationItem>\n                  )}\n                </CPagination>\n              </CCardBody>\n              </CCard>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      }\n    </>\n  )\n}\n\nexport default SurveySearchList\n"],"names":["Background","styled","LoadingText","src","ladingImage","alt","width","search","decodeURI","window","location","href","split","params","URLSearchParams","nowPage","get","categoryOptionList","animatedComponents","makeAnimated","usePromise","axios","apiConfig","cresponse","data","map","option","push","value","surCatId","label","content","surveyList","page","prev","start","next","end","pagelist","loading","response","arr","i","totalPages","xs","className","action","method","closeMenuOnSelect","components","defaultValue","isMulti","options","type","scope","onClick","e","id","sur_id","title","description","reg_id","answer_cnt","moment","Date","reg_dt","format","due_dt","align","disabled","idx","active"],"sourceRoot":""}