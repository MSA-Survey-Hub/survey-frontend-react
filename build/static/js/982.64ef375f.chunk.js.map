{"version":3,"file":"static/js/982.64ef375f.chunk.js","mappings":"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","sources":["views/analysis/survey_vulgarism.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  CInputGroup,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdown,\n  CFormInput,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CForm,\n  CPagination,\n  CPaginationItem,\n  CTable,\n  CTableDataCell,\n  CTableBody,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CRow,\n  CCol,\n} from '@coreui/react'\nimport axios from \"axios\";\nimport apiConfig from 'src/lib/apiConfig';\nimport moment from 'moment';\nimport usePromise from 'src/lib/usePromise';\n\nconst VulgarismSearchList = () => {\n  const current = decodeURI(window.location.href);\n  const search = current.split(\"?\")[1];\n  const params = new URLSearchParams(search);\n  const nowPage = params.get('page') ? params.get('page') : 1;\n\n  let page = {\n    prev: false,\n    start: 1,\n    page: 3,\n    next: false,\n    end: 1,\n    pagelist: [1, 2, 3, 4, 5, 6],\n  }\n  let category = [\n    {id: 1, name: '학교' },\n    {id: 2, name: '기업',},\n    {id: 3,name: '연애',},\n    {id: 4,name: '사업',},\n    {id: 5, name: '취미',},\n  ]\n\n  let vulgarismList = []\n\n  // 비속어 검색 리스트\n  const [loading, response, error] = usePromise(() => {\n    return axios.get(apiConfig.vulgarismData);\n  }, []);\n\n\n  if(response != null){\n    vulgarismList = response.data;\n    console.log(\"surveyList : \",vulgarismList);\n  }\n  \n\n\n  // 비속어 상세 페이지 링크\n  const tableRowClick = (e, id) => {\n    // window.location.href = \"/#/survey/detail/\"+id;\n  }\n\n      \n  return (\n    <>\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong> 비속어 검색 </strong>\n          </CCardHeader>\n          <CCardBody>\n            <CCard className=\"mb-2\">\n              <CCardBody>\n                <CForm action={'/#/survey/search'} method={'post'}>\n                  <CInputGroup className=\"mb-4\">\n                    <CDropdown variant=\"input-group\">\n                      <CDropdownToggle color=\"secondary\" variant=\"outline\">\n                        분류 선택\n                      </CDropdownToggle>\n                      <CDropdownMenu>\n                        {category.map((data) => (\n                          <CDropdownItem href={'/search?category=' + data.id} key={data.id}>\n                            {data.name}\n                          </CDropdownItem>\n                        ))}\n                      </CDropdownMenu>\n                    </CDropdown>\n                    <CFormInput aria-label=\"Text input with 2 dropdown buttons\" />\n                    <CButton type=\"submit\">검색</CButton>\n                  </CInputGroup>\n                </CForm>\n                <CCard className=\"mb-3\">\n                  <CCardHeader>검색 목록</CCardHeader>\n                  <CCardBody>\n                    <CTable className=\"table-hover\">\n                      <CTableHead>\n                        <CTableRow>\n                          <CTableHeaderCell scope=\"col\">설문 ID</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">기본정보 비속어</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">질문정보 비속어</CTableHeaderCell>\n                        </CTableRow>\n                      </CTableHead>\n                      <CTableBody>\n\n\n\n                        {vulgarismList.map((data) => (\n                          <CTableRow key={data.surId} onClick={(e) => tableRowClick(e, data.sur_id)}>\n                            <CTableHeaderCell scope=\"row\">{data.surId}</CTableHeaderCell>\n                            {/* <CTableDataCell>{data.surId}</CTableDataCell> */}\n                            <CTableDataCell style={{ color: data.infoYn ? \"red\" : \"blue\"}}>{String(data.infoYn).toUpperCase()}</CTableDataCell>\n                            <CTableDataCell style={{ color: data.questionYn ? \"red\" : \"blue\"}}>{String(data.questionYn).toUpperCase()}</CTableDataCell>\n                          </CTableRow>\n                        ))}\n\n\n                      </CTableBody>\n                    </CTable>\n                  </CCardBody>\n                </CCard>\n                <CPagination aria-label=\"Page navigation example\" align=\"center\">\n                  {page.prev ? (\n                    <CPaginationItem aria-label=\"Previous\">\n                      <span aria-hidden=\"true\">\n                        <a href={'/#/survey/search?page=' + page.start - 1}>&laquo;</a>\n                      </span>\n                    </CPaginationItem>\n                  ) : (\n                    <CPaginationItem aria-label=\"Previous\" disabled>\n                      <span aria-hidden=\"true\">&laquo;</span>\n                    </CPaginationItem>\n                  )}\n                  \n                  {page.pagelist.map((idx) =>\n                    idx === page.page ? (\n                      <CPaginationItem active key={idx}>{page.page}</CPaginationItem>\n                    ) : (\n                      <CPaginationItem key={idx}>\n                        <a href={'/#/survey/search?&page=' + idx}>{idx}</a>\n                      </CPaginationItem>\n                    ),\n                  )}\n                  {page.next ? (\n                    <CPaginationItem aria-label=\"Next\">\n                      <span aria-hidden=\"true\">\n                        <a href={'/#/survey/search?page=' + page.end + 1}>&raquo;</a>\n                      </span>\n                    </CPaginationItem>\n                  ) : (\n                    <CPaginationItem aria-label=\"Next\" disabled>\n                      <span aria-hidden=\"true\">&raquo;</span>\n                    </CPaginationItem>\n                  )}\n                </CPagination>\n              </CCardBody>\n              </CCard>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default VulgarismSearchList\n"],"names":["search","decodeURI","window","location","href","split","params","URLSearchParams","page","get","prev","start","next","end","pagelist","vulgarismList","usePromise","axios","apiConfig","response","data","console","log","xs","className","action","method","variant","color","id","name","map","type","scope","onClick","e","sur_id","surId","style","infoYn","String","toUpperCase","questionYn","align","disabled","idx","active"],"sourceRoot":""}