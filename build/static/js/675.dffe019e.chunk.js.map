{"version":3,"file":"static/js/675.dffe019e.chunk.js","mappings":"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","sources":["views/pages/Register.js"],"sourcesContent":["import React, {useState} from 'react'\nimport {\n  CButton,\n  CCard, CCardHeader, CCardBody, CCardFooter,\n  CForm, CFormInput, CFormLabel, CFormSelect, CFormCheck,\n  CInputGroup,\n  CInputGroupText, CAlert,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport axios from \"axios\";\nimport apiConfig from \"../../lib/apiConfig\";\n\nconst Register = () => {\n  const [jobList, setJobList] = useState([]);\n\n  useState(async () => {\n    await axios.get(apiConfig.jobList)\n      .then((response) => {\n        setJobList(response.data)\n      })\n  })\n\n  const [userId, setUserId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [job, setJob] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [gender, setGender] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [mailAddr, setMailAddr] = useState(\"\");\n  // const [acceptPhone, setAcceptPhone] = useState(true);\n  // const [acceptMailAddr, setAcceptMailAddr] = useState(true);\n  const [userPwd, setUserPwd] = useState(\"\");\n\n  const formData = new FormData();\n\n  // const userInfo = {\n  //   userId: userId,\n  //   name: name,\n  //   job: job,\n  //   age: age,\n  //   gender: gender,\n  //   phone: phone,\n  //   mailAddr: mailAddr,\n  //   userRole: \"USER\",\n  //   userPwd: userPwd,\n  //   status: 0,\n  //   statusInfo: null,\n  //   userImage: userImage\n  // }\n\n  const userInfo = new FormData();\n  userInfo.append(\"userId\", userId);\n  userInfo.append(\"name\", name);\n  userInfo.append(\"job\", job);\n  userInfo.append(\"age\", age);\n  userInfo.append(\"gender\", gender);\n  userInfo.append(\"phone\", phone);\n  userInfo.append(\"mailAddr\", mailAddr);\n  userInfo.append(\"userRole\", \"USER\");\n  userInfo.append(\"userPwd\", userPwd);\n  userInfo.append(\"status\", 0);\n  userInfo.append(\"statusInfo\", \"statusInfo\");\n\n\n  const registerUser = () => {\n    axios.post(\n      apiConfig.signup,\n      userInfo\n      // ,{headers: {\"Content-Type\":\"application/json\"}}\n      ).then((response) => {\n        window.alert(response.data)\n        window.location.replace(\"/#/login\")\n      }).catch((error) => {\n        setAlertColor(\"danger\")\n        setAlertMessage(error.response.data)\n        setAlertVisible(true)\n      })\n  }\n\n  const uploadFile = () => {\n    axios.post(\n      \"common-service/v1/common/upload/user\",\n      userInfo\n    ).then((response) => {\n      window.location.replace(response.data)\n    }).catch((error) => {\n      console.log(error)\n    })\n  }\n\n  const [alertVisible, setAlertVisible] = useState(false)\n  const [alertColor, setAlertColor] = useState(\"\")\n  const [alertMessage, setAlertMessage] = useState(\"\")\n\n  return (\n    <>\n      <CAlert\n        visible={alertVisible}\n        color={alertColor}\n        dismissible\n        onClose={() => setAlertVisible(false)}\n      >{alertMessage}</CAlert>\n\n      <CCard className=\"mx-4\">\n        <CCardHeader><strong>회원 가입</strong><small> 상세 정보를 입력하여 회원가입을 진행하시오.</small></CCardHeader>\n        <CCardBody className=\"p-4\">\n          <CForm>\n\n            <CFormLabel>아이디</CFormLabel>\n            <CInputGroup className=\"mb-3\">\n              <CInputGroupText>\n                <CIcon icon={cilUser} />\n              </CInputGroupText>\n              <CFormInput\n                autoComplete=\"username\"\n                type=\"text\"\n                placeholder=\"아이디를 입력하세요\"\n                value={userId}\n                onChange= {(e) => {setUserId(e.target.value)}}\n              />\n            </CInputGroup>\n\n\n            <CFormLabel>이름</CFormLabel>\n            <CInputGroup className=\"mb-3\">\n              <CInputGroupText>\n                <CIcon icon={cilUser} />\n              </CInputGroupText>\n              <CFormInput\n                type=\"text\"\n                placeholder=\"이름을 입력하세요\"\n                value={name}\n                onChange={(e) => {setName(e.target.value)}}\n              />\n            </CInputGroup>\n\n            <div className=\"d-flex justify-content-between\">\n              <CFormLabel>이메일 주소</CFormLabel>\n              <strong><CFormCheck readOnly checked label=\"수신동의\"/></strong>\n            </div>\n            <CInputGroup className=\"mb-3\">\n              <CInputGroupText>@</CInputGroupText>\n              <CFormInput\n                type=\"email\"\n                placeholder=\"이메일을 입력하세요\"\n                value={mailAddr}\n                onChange={(e) => {setMailAddr(e.target.value)}}\n              />\n            </CInputGroup>\n\n            <CFormLabel>비밀번호</CFormLabel>\n            <CInputGroup className=\"mb-3\">\n              <CInputGroupText>\n                <CIcon icon={cilLockLocked} />\n              </CInputGroupText>\n              <CFormInput\n                autoComplete=\"current-password\"\n                type=\"password\"\n                placeholder=\"비밀번호를 입력하세요\"\n                value={userPwd}\n                onChange={(e) => {setUserPwd(e.target.value)}}\n              />\n            </CInputGroup>\n\n            <CFormLabel>비밀번호 확인</CFormLabel>\n            <CInputGroup className=\"mb-4\">\n              <CInputGroupText>\n                <CIcon icon={cilLockLocked} />\n              </CInputGroupText>\n              <CFormInput\n                type=\"password\"\n                placeholder=\"비밀번호 확인을 입력하세요\"/>\n            </CInputGroup>\n\n            <CFormLabel>프로필 이미지</CFormLabel>\n            <CInputGroup className=\"mb-4\">\n              <CInputGroupText>\n                <CIcon icon={cilLockLocked} />\n              </CInputGroupText>\n              <CFormInput\n                type=\"file\"\n                onChange={(e) => {userInfo.append('userImage', e.target.files[0])}}\n              />\n            </CInputGroup>\n\n            <div className=\"d-flex justify-content-between\">\n              <CFormLabel>휴대폰 번호</CFormLabel>\n              <strong><CFormCheck readOnly checked label=\"수신동의\"/></strong>\n            </div>\n            <CInputGroup className=\"mb-3\">\n              <CInputGroupText>\n                <CIcon icon={cilUser} />\n              </CInputGroupText>\n              <CFormInput\n                type=\"tel\"\n                placeholder=\"휴대폰 번호를 입력하세요\"\n                value={phone}\n                onChange={(e) => {setPhone(e.target.value)}}\n              />\n            </CInputGroup>\n\n\n\n            <CFormLabel>나이</CFormLabel>\n            <CInputGroup className=\"mb-3\">\n              <CInputGroupText>\n                <CIcon icon={cilUser} />\n              </CInputGroupText>\n              <CFormInput\n                type=\"number\"\n                placeholder=\"나이를 입력하세요\"\n                value={age}\n                onChange={(e) => {setAge(e.target.value)}}\n              />\n            </CInputGroup>\n\n            <CFormLabel>성별</CFormLabel>\n            <CInputGroup className=\"mb-3\">\n              <CInputGroupText>\n                <CIcon icon={cilUser} />\n              </CInputGroupText>\n              <CFormSelect onChange={(e) => {setGender(e.target.value)}}>\n                <option>성별을 선택하세요</option>\n                <option value=\"W\">여자</option>\n                <option value=\"M\">남자</option>\n              </CFormSelect>\n            </CInputGroup>\n\n            <CFormLabel>직업</CFormLabel>\n            <CInputGroup className=\"mb-3\">\n              <CInputGroupText>\n                <CIcon icon={cilUser} />\n              </CInputGroupText>\n              <CFormSelect onChange={(e) => {setJob(e.target.value)}}>\n                <option>직업을 선택하세요</option>\n                {jobList.map((jobItem) => (\n                  <option\n                    key={jobItem.userJobId}\n                    value={jobItem.content}>\n                    {jobItem.content}\n                  </option>\n                ))}\n              </CFormSelect>\n            </CInputGroup>\n\n          </CForm>\n          <div className=\"d-flex justify-content-start\">\n            <CButton className=\"mt-3\" variant=\"outline\" color=\"primary\" onClick={registerUser}>\n              Register\n            </CButton>\n          </div>\n        </CCardBody>\n      </CCard>\n\n\n    </>\n\n\n\n  )\n}\n\nexport default Register\n"],"names":["useState","jobList","setJobList","axios","apiConfig","then","response","data","userId","setUserId","name","setName","job","setJob","age","setAge","gender","setGender","phone","setPhone","mailAddr","setMailAddr","userPwd","setUserPwd","userInfo","FormData","append","alertVisible","setAlertVisible","alertColor","setAlertColor","alertMessage","setAlertMessage","visible","color","dismissible","onClose","className","icon","cilUser","autoComplete","type","placeholder","value","onChange","e","target","readOnly","checked","label","cilLockLocked","files","map","jobItem","content","userJobId","variant","onClick","window","alert","location","replace","catch","error"],"sourceRoot":""}