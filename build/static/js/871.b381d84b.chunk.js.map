{"version":3,"file":"static/js/871.b381d84b.chunk.js","mappings":"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","sources":["lib/Loading/Styles2.js","lib/Loading/Loading2.js","views/survey/search/Search.js"],"sourcesContent":["// Styles.js\nimport styled from 'styled-components';\n\nexport const Background = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 70vh;\n  top: 0;\n  left: 0;\n  background: #ffffffb7;\n  z-index: 999;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LoadingText = styled.div`\n  font: 1rem 'Noto Sans KR';\n  text-align: center;\n`;","import React from 'react';\nimport ladingImage from 'src/assets/images/loading/loading2.gif';\nimport {Background, LoadingText} from './Styles2';\n\nexport const Loading = () => {\n    return (\n        <>\n            <Background>\n                <LoadingText>잠시만 기다려 주세요.</LoadingText>\n                <img src={ladingImage} alt=\"로딩중\" width=\"5%\" />\n            </Background>\n        </>\n      );\n  };\n\nexport default Loading;\n\n","import React, { useState, useEffect } from 'react'\nimport {\n  CInputGroup,\n  CFormInput,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CForm,\n  CTable,\n  CTableDataCell,\n  CTableBody,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CRow,\n  CCol,\n} from '@coreui/react'\nimport axios from \"axios\";\nimport apiConfig from 'src/lib/apiConfig';\nimport moment from 'moment';\nimport usePromise from 'src/lib/usePromise';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport Loading from 'src/lib/Loading/Loading2';\nimport Pagination from \"react-js-pagination\";\n\nconst SurveySearchList = () => {\n\n\n  const [loading, setLoading] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [surveyList, setSurveyList] = useState([]);\n  const [pageData, setPageData] = useState({\n    totalPage: 0,\n    page: 1,\n    size: 0,\n    start: 0,\n    end: 0,\n    prev: false,\n    next: false,\n    totalElements : 1\n  })\n  const [keyword, setKeyword] = useState('');\n  const [savedkeyword, setSavedKeyword] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    handleFetch(1, '');\n  }, []);\n  \n\n  // 카테고리 리스트\n  let categoryOptionList = [];\n  const animatedComponents = makeAnimated();\n  const [cloading, response, cerror] = usePromise(() => {\n    return axios.get(apiConfig.surveyCategorySelectList)\n  }, []);\n  if(response != null){\n    response.data.map((option) => {\n      categoryOptionList.push({ value: option.surCatId, label: option.content });\n    });\n  }\n  \n\n\n// 설문 리스트\nconst handleFetch = (selectedPage, title) => {\n  setLoading(true);\n  axios.get(apiConfig.surveySearchList + \"?category=10&page=\"+ selectedPage+\"&title=\"+ title)\n  .then(response => {\n    const data = response.data;\n    setSurveyList(data.content);\n    setPageData({\n    totalPage: 0,\n    page: data.number+1,\n    size: data.size,\n    start: 1,\n    end: data.totalPages,\n    prev: data.first? false: true,\n    next: data.last? false: true,\n    totalElements : data.totalElements\n  }); \n    setLoading(false);\n  })\n  .catch(error => console.error('Error', error));\n};\n\nconst handlePageChange = (selectedPage) => {\n  handleFetch(selectedPage, savedkeyword);\n};\n\nconst handlekeywordChange = (e) => {\n  const { value, name } = e.target;\n  setKeyword(value);\n};\n\nconst handleClickSearch = () => {\n  setSavedKeyword(keyword);\n  handleFetch(1, keyword);\n};\n\n\n\n\n  // 검색 상세 페이지 링크\n  const tableRowClick = (e, id) => {\n    window.location.href = \"/#/survey/detail/\"+id;\n  }\n\n      \n  return (\n    <>\n    { loading?  <Loading /> : \n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong> 설문 검색 </strong>\n            <small> 배포된 설문조사를 조회 할 수 있습니다. </small>\n          </CCardHeader>\n          <CCardBody>\n            <CCard className=\"mb-2\">\n              <CCardBody>\n                <CForm action={'/#/survey/search'} method={'post'}>\n                  <CInputGroup className=\"mb-4\">\n                    <Select\n                      closeMenuOnSelect={false}\n                      components={animatedComponents}\n                      defaultValue={1}\n                      options={categoryOptionList}\n                      onChange={setSelectedOption}\n\n                    />\n                    <CFormInput placeholder='제목을 입력하세요.' value={keyword} onChange={handlekeywordChange}/>\n                    <CButton type=\"button\" onClick={handleClickSearch}>검색</CButton>\n                  </CInputGroup>\n                </CForm>\n                <CCard className=\"mb-3\">\n                  <CCardHeader>검색 목록</CCardHeader>\n                  <CCardBody>\n                    <CTable className=\"table-hover\">\n                      <CTableHead>\n                        <CTableRow>\n                          <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문분류</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문명</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문내용</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문생성자</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문참여자</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">설문일</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">마감일</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">조회수</CTableHeaderCell>\n                        </CTableRow>\n                      </CTableHead>\n                      <CTableBody>\n                        {surveyList.map((data) => (\n                          <CTableRow key={data.sur_id} onClick={(e) => tableRowClick(e, data.sur_id)}>\n                            <CTableHeaderCell scope=\"row\">{data.sur_id}</CTableHeaderCell>\n                            <CTableDataCell>{data.content}</CTableDataCell>\n                            <CTableDataCell>{data.title}</CTableDataCell>\n                            <CTableDataCell>{data.description}</CTableDataCell>\n                            <CTableDataCell>{data.reg_id}</CTableDataCell>\n                            <CTableDataCell>{data.answer_cnt}명</CTableDataCell>\n                            <CTableDataCell>{moment(new Date(data.reg_dt)).format('YYYY-MM-DD')}</CTableDataCell>\n                            <CTableDataCell>{moment(new Date(data.due_dt)).format('YYYY-MM-DD')}</CTableDataCell>\n                            <CTableDataCell>{data.views}회</CTableDataCell>\n                          </CTableRow>\n                        ))}\n                      </CTableBody>\n                    </CTable>\n                  </CCardBody>\n                </CCard>\n                \n                {\n                    surveyList.length > 0 ? (<Pagination\n                      activePage={pageData.page}\n                      itemsCountPerPage={pageData.size}\n                      totalItemsCount={pageData.totalElements}\n                      pageRangeDisplayed={10}\n                      prevPageText={\"‹\"}\n                      nextPageText={\"›\"}\n                      onChange={handlePageChange}\n                    />) : ''\n                    }\n                     \n              </CCardBody>\n              </CCard>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      }\n    </>\n  )\n}\n\nexport default SurveySearchList\n"],"names":["Background","styled","LoadingText","src","ladingImage","alt","width","useState","loading","setLoading","setSelectedOption","surveyList","setSurveyList","totalPage","page","size","start","end","prev","next","totalElements","pageData","setPageData","keyword","setKeyword","savedkeyword","setSavedKeyword","useEffect","handleFetch","categoryOptionList","animatedComponents","makeAnimated","usePromise","axios","apiConfig","response","data","map","option","push","value","surCatId","label","content","selectedPage","title","then","number","totalPages","first","last","catch","error","console","xs","className","action","method","closeMenuOnSelect","components","defaultValue","options","onChange","placeholder","e","target","name","type","onClick","scope","id","sur_id","window","location","href","description","reg_id","answer_cnt","moment","Date","reg_dt","format","due_dt","views","length","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","prevPageText","nextPageText"],"sourceRoot":""}